#!/usr/bin/perl -CS
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.
#
# A re-write of the script provided with i3blocks by Tony Greenberg <info@bayesicresearch.org>
#
use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;

# read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep -v 'unavailable' |") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status     = $1;
$percent    = $2;
$full_text  = "$percent%";
$short_text = $full_text;

if ($acpi =~ /(\d\d:\d\d):/) {
	if ($status eq 'Charging'){
		$full_text .= " ($1 )";
	} else {
		$full_text .= " ($1)";
	}
}

# print text
if ($percent < 5) {
	print "$full_text \n";
	print "$short_text \n";
	print "#FF0000\n";
	exit(33);
} elsif ($percent < 25) {
	print "$full_text \n";
	print "$short_text \n";
	print "#FA3F3F\n";
} elsif ($percent < 50) {
	print "$full_text \n";
	print "$short_text \n";
	print "#FA5F5F\n";
} elsif ($percent < 75) {
	print "$full_text \n";
	print "$short_text \n";
} else {
	print "$full_text \n";
	print "$short_text \n";
	print "#AEFCB8\n";
}

exit(0);
